// Created using compCode v1.0.2// 20160614 from composition "checkmark" in project "/mindful_share/Motion Graphics/Icon_animations/AE/icon_animations_v004.aep"//// aescripts.com/compCode// compCode_20160614_152158();function compCode_20160614_152158() {app.beginUndoGroup("checkmark");try {// Create Folder hierarchy	var zcompcodescripts_folder = getItem("Z_Compcode_Scripts", FolderItem, app.project.rootFolder);	if (zcompcodescripts_folder === null) {		zcompcodescripts_folder = app.project.items.addFolder("Z_Compcode_Scripts");	}	var basic_folder = getItem("Basic", FolderItem, zcompcodescripts_folder);	if (basic_folder === null) {		basic_folder = app.project.items.addFolder("Basic");		basic_folder.parentFolder = zcompcodescripts_folder;	}	var out_folder = getItem("OUT", FolderItem, basic_folder);	if (out_folder === null) {		out_folder = app.project.items.addFolder("OUT");		out_folder.parentFolder = basic_folder;	}	var precomps_folder = getItem("PreComps", FolderItem, basic_folder);	if (precomps_folder === null) {		precomps_folder = app.project.items.addFolder("PreComps");		precomps_folder.parentFolder = basic_folder;	}// Create Compositions	var checkmark_comp = app.project.items.addComp("checkmark", 412, 412, 1, 2.8, 25);		checkmark_comp.time = 2.76;		checkmark_comp.bgColor = [0,0,0];		checkmark_comp.parentFolder = out_folder;	var checkmarkanimation_comp = getItem("checkmark_animation", CompItem, precomps_folder);	var checkmarkanimation_comp_populate = false;	if (checkmarkanimation_comp === null) {		checkmarkanimation_comp = app.project.items.addComp("checkmark_animation", 412, 412, 1, 1.24, 25);		checkmarkanimation_comp.time = 0;		checkmarkanimation_comp.bgColor = [0,0,0];		checkmarkanimation_comp.shutterPhase = -90;		checkmarkanimation_comp.motionBlur = true;		checkmarkanimation_comp.parentFolder = precomps_folder;		checkmarkanimation_comp_populate = true;	}// Working with comp "checkmark", varName "checkmark_comp";	checkmark_comp.openInViewer();	// Add Shape Layer "Icon_bg_mask 2", varName "iconbgmask2";	var iconbgmask2 = checkmark_comp.layers.addShape();		iconbgmask2.name = "Icon_bg_mask 2";		iconbgmask2.enabled = false;		iconbgmask2.motionBlur = true;		iconbgmask2.moveToEnd();		iconbgmask2.property("ADBE Root Vectors Group").addProperty("ADBE Vector Group");		iconbgmask2.property("ADBE Root Vectors Group").property(1).name = "chemicals Outlines - Group 22";		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(2).addProperty("ADBE Vector Group");		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(2).property(1).name = "Group 22";		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).addProperty("ADBE Vector Shape - Group");		var iconbgmask2Path = iconbgmask2.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(1).property("ADBE Vector Shape");		var iconbgmask2Path_newShape = new Shape();			iconbgmask2Path_newShape.vertices = [[144, 0], [0, 144], [-144, 0], [0, -144]];			iconbgmask2Path_newShape.inTangents = [[0, -79.5289916992188], [79.5289916992188, 0], [0, 79.5289916992188], [-79.5290069580078, 0]];			iconbgmask2Path_newShape.outTangents = [[0, 79.5289916992188], [-79.5290069580078, 0], [0, -79.5289916992188], [79.5289916992188, 0]];			iconbgmask2Path_newShape.closed = true;		iconbgmask2Path.setValue(iconbgmask2Path_newShape);		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).addProperty("ADBE Vector Graphic - Stroke");		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Color").setValue([0,0,0,1]);		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Width").setValue(12);		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Line Cap").setValue(2);		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Line Join").setValue(2);		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(3).property("ADBE Vector Anchor").setValue([206,206]);		iconbgmask2.property("ADBE Root Vectors Group").property(1).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbgmask2.property("ADBE Root Vectors Group").addProperty("ADBE Vector Group");		iconbgmask2.property("ADBE Root Vectors Group").property(2).name = "chemicals Outlines - Group 23";		iconbgmask2.property("ADBE Root Vectors Group").property(2).property(2).addProperty("ADBE Vector Group");		iconbgmask2.property("ADBE Root Vectors Group").property(2).property(2).property(1).name = "Group 23";		iconbgmask2.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).addProperty("ADBE Vector Shape - Group");		var iconbgmask2Path = iconbgmask2.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).property(1).property("ADBE Vector Shape");		var iconbgmask2Path_newShape = new Shape();			iconbgmask2Path_newShape.vertices = [[144, 0], [0, 144], [-144, 0], [0, -144]];			iconbgmask2Path_newShape.inTangents = [[0, -79.5289916992188], [79.5289916992188, 0], [0, 79.5289916992188], [-79.5290069580078, 0]];			iconbgmask2Path_newShape.outTangents = [[0, 79.5289916992188], [-79.5290069580078, 0], [0, -79.5289916992188], [79.5289916992188, 0]];			iconbgmask2Path_newShape.closed = true;		iconbgmask2Path.setValue(iconbgmask2Path_newShape);		iconbgmask2.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).addProperty("ADBE Vector Graphic - Fill");		iconbgmask2.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).property(2).property("ADBE Vector Fill Color").setValue([0.14100000718061,0.67099998324525,0.88999998803232,1]);		iconbgmask2.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbgmask2.property("ADBE Root Vectors Group").property(2).property(3).property("ADBE Vector Anchor").setValue([206,206]);		iconbgmask2.property("ADBE Root Vectors Group").property(2).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbgmask2.property("ADBE Transform Group").property("ADBE Anchor Point").setValue([206,206,0]);		var iconbgmask2Scale = iconbgmask2.property("ADBE Transform Group").property("ADBE Scale");			var iconbgmask2Scale_keyTimesArray = [0,0.4,2.4,2.76];			var iconbgmask2Scale_valuesArray = [[0,0,100],[100,100,100],[100,100,100],[0,0,100]];			iconbgmask2Scale.setValuesAtTimes(iconbgmask2Scale_keyTimesArray, iconbgmask2Scale_valuesArray);			var iconbgmask2Scale_easeInSpeedArray = [[0,0,0],[0,0,0],[0,0,0],[0,0,0]];			var iconbgmask2Scale_easeInInfluArray = [[50,50,50],[50,50,50],[50,50,50],[50,50,50]];			var iconbgmask2Scale_easeOutSpeedArray = [[0,0,0],[0,0,0],[0,0,0],[0,0,0]];			var iconbgmask2Scale_easeOutInfluArray = [[50,50,50],[50,50,50],[50,50,50],[50,50,50]];			var iconbgmask2Scale_keyInInterpolationType = [KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER];			var iconbgmask2Scale_keyOutInterpolationType = [KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER];			applyEasing(iconbgmask2Scale, iconbgmask2Scale_keyTimesArray, [iconbgmask2Scale_easeInSpeedArray, iconbgmask2Scale_easeInInfluArray], [iconbgmask2Scale_easeOutSpeedArray, iconbgmask2Scale_easeOutInfluArray], [iconbgmask2Scale_keyInInterpolationType, iconbgmask2Scale_keyOutInterpolationType]);		iconbgmask2.selected = false;	// Add existing composition "checkmark_animation", varName "checkmarkanimation_comp";	var checkmarkanimation = checkmark_comp.layers.add(checkmarkanimation_comp);		checkmarkanimation.outPoint = 1.24;		checkmarkanimation.motionBlur = true;		checkmarkanimation.moveToEnd();		checkmarkanimation.trackMatteType = TrackMatteType.ALPHA;		checkmarkanimation.timeRemapEnabled = true;		checkmarkanimation.outPoint = 70 / checkmarkanimation.containingComp.frameRate;		var checkmarkanimationTimeRemap = checkmarkanimation.property("ADBE Time Remapping");			checkmarkanimationTimeRemap.setValueAtTime(99999, checkmarkanimationTimeRemap.keyValue(1));			checkmarkanimationTimeRemap.removeKey(2);			checkmarkanimationTimeRemap.removeKey(1);			var checkmarkanimationTimeRemap_keyTimesArray = [0,1.2,1.6,2.76];			var checkmarkanimationTimeRemap_valuesArray = [0,1.2,1.2,0];			checkmarkanimationTimeRemap.setValuesAtTimes(checkmarkanimationTimeRemap_keyTimesArray, checkmarkanimationTimeRemap_valuesArray);			checkmarkanimationTimeRemap.removeKey(checkmarkanimationTimeRemap.nearestKeyIndex(99999));		checkmarkanimation.selected = false;	// Add Shape Layer "Icon_bg_mask", varName "iconbgmask";	var iconbgmask = checkmark_comp.layers.addShape();		iconbgmask.name = "Icon_bg_mask";		iconbgmask.enabled = false;		iconbgmask.motionBlur = true;		iconbgmask.moveToEnd();		iconbgmask.property("ADBE Root Vectors Group").addProperty("ADBE Vector Group");		iconbgmask.property("ADBE Root Vectors Group").property(1).name = "chemicals Outlines - Group 22";		iconbgmask.property("ADBE Root Vectors Group").property(1).property(2).addProperty("ADBE Vector Group");		iconbgmask.property("ADBE Root Vectors Group").property(1).property(2).property(1).name = "Group 22";		iconbgmask.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).addProperty("ADBE Vector Shape - Group");		var iconbgmaskPath = iconbgmask.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(1).property("ADBE Vector Shape");		var iconbgmaskPath_newShape = new Shape();			iconbgmaskPath_newShape.vertices = [[144, 0], [0, 144], [-144, 0], [0, -144]];			iconbgmaskPath_newShape.inTangents = [[0, -79.5289916992188], [79.5289916992188, 0], [0, 79.5289916992188], [-79.5290069580078, 0]];			iconbgmaskPath_newShape.outTangents = [[0, 79.5289916992188], [-79.5290069580078, 0], [0, -79.5289916992188], [79.5289916992188, 0]];			iconbgmaskPath_newShape.closed = true;		iconbgmaskPath.setValue(iconbgmaskPath_newShape);		iconbgmask.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).addProperty("ADBE Vector Graphic - Stroke");		iconbgmask.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Color").setValue([0,0,0,1]);		iconbgmask.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Width").setValue(12);		iconbgmask.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Line Cap").setValue(2);		iconbgmask.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Line Join").setValue(2);		iconbgmask.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbgmask.property("ADBE Root Vectors Group").property(1).property(3).property("ADBE Vector Anchor").setValue([206,206]);		iconbgmask.property("ADBE Root Vectors Group").property(1).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbgmask.property("ADBE Root Vectors Group").addProperty("ADBE Vector Group");		iconbgmask.property("ADBE Root Vectors Group").property(2).name = "chemicals Outlines - Group 23";		iconbgmask.property("ADBE Root Vectors Group").property(2).property(2).addProperty("ADBE Vector Group");		iconbgmask.property("ADBE Root Vectors Group").property(2).property(2).property(1).name = "Group 23";		iconbgmask.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).addProperty("ADBE Vector Shape - Group");		var iconbgmaskPath = iconbgmask.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).property(1).property("ADBE Vector Shape");		var iconbgmaskPath_newShape = new Shape();			iconbgmaskPath_newShape.vertices = [[144, 0], [0, 144], [-144, 0], [0, -144]];			iconbgmaskPath_newShape.inTangents = [[0, -79.5289916992188], [79.5289916992188, 0], [0, 79.5289916992188], [-79.5290069580078, 0]];			iconbgmaskPath_newShape.outTangents = [[0, 79.5289916992188], [-79.5290069580078, 0], [0, -79.5289916992188], [79.5289916992188, 0]];			iconbgmaskPath_newShape.closed = true;		iconbgmaskPath.setValue(iconbgmaskPath_newShape);		iconbgmask.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).addProperty("ADBE Vector Graphic - Fill");		iconbgmask.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).property(2).property("ADBE Vector Fill Color").setValue([0.14100000718061,0.67099998324525,0.88999998803232,1]);		iconbgmask.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbgmask.property("ADBE Root Vectors Group").property(2).property(3).property("ADBE Vector Anchor").setValue([206,206]);		iconbgmask.property("ADBE Root Vectors Group").property(2).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbgmask.property("ADBE Transform Group").property("ADBE Anchor Point").setValue([206,206,0]);		var iconbgmaskScale = iconbgmask.property("ADBE Transform Group").property("ADBE Scale");			var iconbgmaskScale_keyTimesArray = [0,0.4,2.4,2.76];			var iconbgmaskScale_valuesArray = [[0,0,100],[100,100,100],[100,100,100],[0,0,100]];			iconbgmaskScale.setValuesAtTimes(iconbgmaskScale_keyTimesArray, iconbgmaskScale_valuesArray);			var iconbgmaskScale_easeInSpeedArray = [[0,0,0],[0,0,0],[0,0,0],[0,0,0]];			var iconbgmaskScale_easeInInfluArray = [[50,50,50],[50,50,50],[50,50,50],[50,50,50]];			var iconbgmaskScale_easeOutSpeedArray = [[0,0,0],[0,0,0],[0,0,0],[0,0,0]];			var iconbgmaskScale_easeOutInfluArray = [[50,50,50],[50,50,50],[50,50,50],[50,50,50]];			var iconbgmaskScale_keyInInterpolationType = [KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER];			var iconbgmaskScale_keyOutInterpolationType = [KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER];			applyEasing(iconbgmaskScale, iconbgmaskScale_keyTimesArray, [iconbgmaskScale_easeInSpeedArray, iconbgmaskScale_easeInInfluArray], [iconbgmaskScale_easeOutSpeedArray, iconbgmaskScale_easeOutInfluArray], [iconbgmaskScale_keyInInterpolationType, iconbgmaskScale_keyOutInterpolationType]);		iconbgmask.selected = false;	// Add existing composition "checkmark_animation", varName "checkmarkanimation_comp";	var shadow = checkmark_comp.layers.add(checkmarkanimation_comp);		shadow.name = "shadow";		shadow.outPoint = 1.24;		shadow.motionBlur = true;		shadow.moveToEnd();		shadow.trackMatteType = TrackMatteType.ALPHA;		shadow.timeRemapEnabled = true;		shadow.outPoint = 70 / shadow.containingComp.frameRate;		var shadowTimeRemap = shadow.property("ADBE Time Remapping");			shadowTimeRemap.setValueAtTime(99999, shadowTimeRemap.keyValue(1));			shadowTimeRemap.removeKey(2);			shadowTimeRemap.removeKey(1);			var shadowTimeRemap_keyTimesArray = [0,1.2,1.6,2.76];			var shadowTimeRemap_valuesArray = [0,1.2,1.2,0];			shadowTimeRemap.setValuesAtTimes(shadowTimeRemap_keyTimesArray, shadowTimeRemap_valuesArray);			shadowTimeRemap.removeKey(shadowTimeRemap.nearestKeyIndex(99999));		shadow.property("ADBE Effect Parade").addProperty("ADBE Fill");		shadow.property("ADBE Effect Parade").property(1).property("ADBE Fill-0002").setValue([0,0,0,1]);		var shadowPosition = shadow.property("ADBE Transform Group").property("ADBE Position");			var shadowPosition_keyTimesArray = [0.28,0.6,2.2,2.48];			var shadowPosition_valuesArray = [[206,206,0],[227.5,218.5,0],[227.5,218.5,0],[206,206,0]];			shadowPosition.setValuesAtTimes(shadowPosition_keyTimesArray, shadowPosition_valuesArray);			var shadowPosition_inSpatialTangents = [[-3.58333325386047,-2.08333325386047,0],[-3.58333325386047,-2.08333325386047,0],[0,0,0],[3.58333325386047,2.08333325386047,0]];			var shadowPosition_outSpatialTangents = [[3.58333325386047,2.08333325386047,0],[0,0,0],[-3.58333325386047,-2.08333325386047,0],[-3.58333325386047,-2.08333325386047,0]];			applySpatialTangents(shadowPosition, shadowPosition_keyTimesArray, shadowPosition_inSpatialTangents, shadowPosition_outSpatialTangents);			var shadowPosition_easeInSpeedArray = [0,0,0,0];			var shadowPosition_easeInInfluArray = [16.666666667,50,50,16.666666667];			var shadowPosition_easeOutSpeedArray = [0,0,0,0];			var shadowPosition_easeOutInfluArray = [50,16.666666667,16.666666667,50];			var shadowPosition_keyInInterpolationType = [KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER];			var shadowPosition_keyOutInterpolationType = [KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER];			applyEasing(shadowPosition, shadowPosition_keyTimesArray, [shadowPosition_easeInSpeedArray, shadowPosition_easeInInfluArray], [shadowPosition_easeOutSpeedArray, shadowPosition_easeOutInfluArray], [shadowPosition_keyInInterpolationType, shadowPosition_keyOutInterpolationType]);		shadow.property("ADBE Transform Group").property("ADBE Opacity").setValue(20);		shadow.selected = false;	// Add Shape Layer "Icon_bg", varName "iconbg";	var iconbg = checkmark_comp.layers.addShape();		iconbg.name = "Icon_bg";		iconbg.motionBlur = true;		iconbg.moveToEnd();		iconbg.property("ADBE Root Vectors Group").addProperty("ADBE Vector Group");		iconbg.property("ADBE Root Vectors Group").property(1).name = "chemicals Outlines - Group 22";		iconbg.property("ADBE Root Vectors Group").property(1).property(2).addProperty("ADBE Vector Group");		iconbg.property("ADBE Root Vectors Group").property(1).property(2).property(1).name = "Group 22";		iconbg.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).addProperty("ADBE Vector Shape - Group");		var iconbgPath = iconbg.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(1).property("ADBE Vector Shape");		var iconbgPath_newShape = new Shape();			iconbgPath_newShape.vertices = [[144, 0], [0, 144], [-144, 0], [0, -144]];			iconbgPath_newShape.inTangents = [[0, -79.5289916992188], [79.5289916992188, 0], [0, 79.5289916992188], [-79.5290069580078, 0]];			iconbgPath_newShape.outTangents = [[0, 79.5289916992188], [-79.5290069580078, 0], [0, -79.5289916992188], [79.5289916992188, 0]];			iconbgPath_newShape.closed = true;		iconbgPath.setValue(iconbgPath_newShape);		iconbg.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).addProperty("ADBE Vector Graphic - Stroke");		iconbg.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Color").setValue([0,0,0,1]);		iconbg.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Width").setValue(12);		iconbg.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Line Cap").setValue(2);		iconbg.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Line Join").setValue(2);		iconbg.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbg.property("ADBE Root Vectors Group").property(1).property(3).property("ADBE Vector Anchor").setValue([206,206]);		iconbg.property("ADBE Root Vectors Group").property(1).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbg.property("ADBE Root Vectors Group").addProperty("ADBE Vector Group");		iconbg.property("ADBE Root Vectors Group").property(2).name = "chemicals Outlines - Group 23";		iconbg.property("ADBE Root Vectors Group").property(2).property(2).addProperty("ADBE Vector Group");		iconbg.property("ADBE Root Vectors Group").property(2).property(2).property(1).name = "Group 23";		iconbg.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).addProperty("ADBE Vector Shape - Group");		var iconbgPath = iconbg.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).property(1).property("ADBE Vector Shape");		var iconbgPath_newShape = new Shape();			iconbgPath_newShape.vertices = [[144, 0], [0, 144], [-144, 0], [0, -144]];			iconbgPath_newShape.inTangents = [[0, -79.5289916992188], [79.5289916992188, 0], [0, 79.5289916992188], [-79.5290069580078, 0]];			iconbgPath_newShape.outTangents = [[0, 79.5289916992188], [-79.5290069580078, 0], [0, -79.5289916992188], [79.5289916992188, 0]];			iconbgPath_newShape.closed = true;		iconbgPath.setValue(iconbgPath_newShape);		iconbg.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).addProperty("ADBE Vector Graphic - Fill");		iconbg.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).property(2).property("ADBE Vector Fill Color").setValue([0.1410000026226,0.6710000038147,0.88999998569489,1]);		iconbg.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).property(2).property("ADBE Vector Fill Opacity").setValue(60);		iconbg.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbg.property("ADBE Root Vectors Group").property(2).property(3).property("ADBE Vector Anchor").setValue([206,206]);		iconbg.property("ADBE Root Vectors Group").property(2).property(3).property("ADBE Vector Position").setValue([206,206]);		iconbg.property("ADBE Transform Group").property("ADBE Anchor Point").setValue([206,206,0]);		var iconbgScale = iconbg.property("ADBE Transform Group").property("ADBE Scale");			var iconbgScale_keyTimesArray = [0,0.4,2.4,2.76];			var iconbgScale_valuesArray = [[0,0,100],[100,100,100],[100,100,100],[0,0,100]];			iconbgScale.setValuesAtTimes(iconbgScale_keyTimesArray, iconbgScale_valuesArray);			var iconbgScale_easeInSpeedArray = [[0,0,0],[0,0,0],[0,0,0],[0,0,0]];			var iconbgScale_easeInInfluArray = [[50,50,50],[50,50,50],[50,50,50],[50,50,50]];			var iconbgScale_easeOutSpeedArray = [[0,0,0],[0,0,0],[0,0,0],[0,0,0]];			var iconbgScale_easeOutInfluArray = [[50,50,50],[50,50,50],[50,50,50],[50,50,50]];			var iconbgScale_keyInInterpolationType = [KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER];			var iconbgScale_keyOutInterpolationType = [KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER];			applyEasing(iconbgScale, iconbgScale_keyTimesArray, [iconbgScale_easeInSpeedArray, iconbgScale_easeInInfluArray], [iconbgScale_easeOutSpeedArray, iconbgScale_easeOutInfluArray], [iconbgScale_keyInInterpolationType, iconbgScale_keyOutInterpolationType]);		iconbg.selected = false;// Working with comp "checkmark_animation", varName "checkmarkanimation_comp";if (checkmarkanimation_comp_populate === true) {	// Add Shape Layer "Merged Shape Layer", varName "mergedShapeLayer";	var mergedShapeLayer = checkmarkanimation_comp.layers.addShape();		mergedShapeLayer.name = "Merged Shape Layer";		mergedShapeLayer.motionBlur = true;		mergedShapeLayer.moveToEnd();		mergedShapeLayer.property("ADBE Root Vectors Group").addProperty("ADBE Vector Group");		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).name = "checkmark Outlines - Group 1";		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(2).addProperty("ADBE Vector Group");		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).addProperty("ADBE Vector Shape - Group");		var mergedShapeLayerPath = mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(1).property("ADBE Vector Shape");		var mergedShapeLayerPath_newShape = new Shape();			mergedShapeLayerPath_newShape.vertices = [[-24.0639953613281, 76.4559936523438], [-40.1470031738281, 67.8179931640625], [-80.4400024414062, 12.7250061035156], [-84.1029968261719, -2.26600646972656], [-76.1190032958984, -15.5010070800781], [-64.1699981689453, -19.4219970703125], [-47.9889984130859, -11.2429962158203], [-23.5420074462891, 22.0339965820312], [46.2580108642578, -68.6059875488281], [62.2169952392578, -76.4559936523438], [74.4810028076172, -72.2779846191406], [78.1459808349609, -44.0570068359375], [-7.97200012207031, 68.1790161132812], [-23.9250030517578, 76.4559936523438]];			mergedShapeLayerPath_newShape.inTangents = [[0, 0], [3.97099304199219, 5.40899658203125], [0, 0], [-0.81201171875, 5.34400939941406], [-4.33399963378906, 3.1820068359375], [-4.32200622558594, 0], [-3.76100158691406, -5.12100219726562], [0, 0], [0, 0], [-6.29998779296875, 0], [-3.55001831054688, -2.73300170898438], [6.76901245117188, -8.78997802734375], [0, 0], [5.99600219726562, 0]];			mergedShapeLayerPath_newShape.outTangents = [[-6.10000610351562, 0], [0, 0], [-3.17100524902344, -4.32000732421875], [0.81399536132812, -5.35198974609375], [3.4949951171875, -2.56500244140625], [6.3699951171875, 0], [0, 0], [0, 0], [3.84197998046875, -4.989013671875], [4.47299194335938, 0], [8.79098510742188, 6.77197265625], [0, 0], [-3.99700927734375, 5.18698120117188], [0, 0]];			mergedShapeLayerPath_newShape.closed = true;		mergedShapeLayerPath.setValue(mergedShapeLayerPath_newShape);		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).addProperty("ADBE Vector Graphic - Stroke");		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Color").setValue([0,0,0,1]);		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Width").setValue(9);		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Line Cap").setValue(2);		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(2).property(2).property("ADBE Vector Stroke Line Join").setValue(2);		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(2).property(1).property(3).property("ADBE Vector Position").setValue([207.001998901367,206.044006347656]);		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(3).property("ADBE Vector Anchor").setValue([205.991485595703,206.044006347656]);		mergedShapeLayer.property("ADBE Root Vectors Group").property(1).property(3).property("ADBE Vector Position").setValue([205.991485595703,206.044006347656]);		mergedShapeLayer.property("ADBE Root Vectors Group").addProperty("ADBE Vector Group");		mergedShapeLayer.property("ADBE Root Vectors Group").property(2).name = "checkmark Outlines - Group 2";		mergedShapeLayer.property("ADBE Root Vectors Group").property(2).property(2).addProperty("ADBE Vector Group");		mergedShapeLayer.property("ADBE Root Vectors Group").property(2).property(2).property(1).name = "Group 2";		mergedShapeLayer.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).addProperty("ADBE Vector Shape - Group");		var mergedShapeLayerPath = mergedShapeLayer.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).property(1).property("ADBE Vector Shape");		var mergedShapeLayerPath_newShape = new Shape();			mergedShapeLayerPath_newShape.vertices = [[-24.0639953613281, 76.4559936523438], [-40.1470031738281, 67.8179931640625], [-80.4400024414062, 12.7250061035156], [-84.1029968261719, -2.26600646972656], [-76.1190032958984, -15.5010070800781], [-64.1699981689453, -19.4219970703125], [-47.9889984130859, -11.2429962158203], [-23.5420074462891, 22.0339965820312], [46.2580108642578, -68.6059875488281], [62.2169952392578, -76.4559936523438], [74.4810028076172, -72.2779846191406], [78.1459808349609, -44.0570068359375], [-7.97200012207031, 68.1790161132812], [-23.9250030517578, 76.4559936523438]];			mergedShapeLayerPath_newShape.inTangents = [[0, 0], [3.97099304199219, 5.40899658203125], [0, 0], [-0.81201171875, 5.34400939941406], [-4.33399963378906, 3.1820068359375], [-4.32200622558594, 0], [-3.76100158691406, -5.12100219726562], [0, 0], [0, 0], [-6.29998779296875, 0], [-3.55001831054688, -2.73300170898438], [6.76901245117188, -8.78997802734375], [0, 0], [5.99600219726562, 0]];			mergedShapeLayerPath_newShape.outTangents = [[-6.10000610351562, 0], [0, 0], [-3.17100524902344, -4.32000732421875], [0.81399536132812, -5.35198974609375], [3.4949951171875, -2.56500244140625], [6.3699951171875, 0], [0, 0], [0, 0], [3.84197998046875, -4.989013671875], [4.47299194335938, 0], [8.79098510742188, 6.77197265625], [0, 0], [-3.99700927734375, 5.18698120117188], [0, 0]];			mergedShapeLayerPath_newShape.closed = true;		mergedShapeLayerPath.setValue(mergedShapeLayerPath_newShape);		mergedShapeLayer.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).addProperty("ADBE Vector Graphic - Fill");		mergedShapeLayer.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(2).property(2).property("ADBE Vector Fill Color").setValue([0.47799998521805,0.78799998760223,0.26300001144409,1]);		mergedShapeLayer.property("ADBE Root Vectors Group").property(2).property(2).property(1).property(3).property("ADBE Vector Position").setValue([207.001998901367,206.044006347656]);		mergedShapeLayer.property("ADBE Root Vectors Group").property(2).property(3).property("ADBE Vector Anchor").setValue([205.991485595703,206.044006347656]);		mergedShapeLayer.property("ADBE Root Vectors Group").property(2).property(3).property("ADBE Vector Position").setValue([205.991485595703,206.044006347656]);		mergedShapeLayer.property("ADBE Transform Group").property("ADBE Anchor Point").setValue([205.991485595703,206.044006347656,0]);		mergedShapeLayer.property("ADBE Transform Group").property("ADBE Position").setValue([205.991485595703,206.044006347656,0]);		var mergedShapeLayerScale = mergedShapeLayer.property("ADBE Transform Group").property("ADBE Scale");			var mergedShapeLayerScale_keyTimesArray = [0.12,0.52];			var mergedShapeLayerScale_valuesArray = [[0,0,100],[100,100,100]];			mergedShapeLayerScale.setValuesAtTimes(mergedShapeLayerScale_keyTimesArray, mergedShapeLayerScale_valuesArray);			var mergedShapeLayerScale_easeInSpeedArray = [[0,0,0],[0,0,0]];			var mergedShapeLayerScale_easeInInfluArray = [[55,55,55],[55,55,55]];			var mergedShapeLayerScale_easeOutSpeedArray = [[0,0,0],[0,0,0]];			var mergedShapeLayerScale_easeOutInfluArray = [[55,55,55],[55,55,55]];			var mergedShapeLayerScale_keyInInterpolationType = [KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER];			var mergedShapeLayerScale_keyOutInterpolationType = [KeyframeInterpolationType.BEZIER,KeyframeInterpolationType.BEZIER];			applyEasing(mergedShapeLayerScale, mergedShapeLayerScale_keyTimesArray, [mergedShapeLayerScale_easeInSpeedArray, mergedShapeLayerScale_easeInInfluArray], [mergedShapeLayerScale_easeOutSpeedArray, mergedShapeLayerScale_easeOutInfluArray], [mergedShapeLayerScale_keyInInterpolationType, mergedShapeLayerScale_keyOutInterpolationType]);		mergedShapeLayer.selected = false;}checkmark_comp.openInViewer();} catch(e) {	alert(e.toString() + "\nError on line: " + e.line.toString());}app.endUndoGroup();function getItem(itemName, itemInstanceName, locationObject) {	if (locationObject.numItems > 0) {		for (var i = 1; i <= locationObject.numItems; i ++) {			var curItem = locationObject.item(i);			if (curItem.name === itemName) {				if (curItem instanceof itemInstanceName || (curItem.mainSource !== "undefined" && curItem.mainSource instanceof itemInstanceName)) {					return curItem;				}			}		}	}	return null;}function applyEasing(property, keyTimesArray, easeInArray, easeOutArray, keyInterpolationArray) {	for (var i = 0; i < keyTimesArray.length; i ++) {		if (property.propertyValueType === PropertyValueType.TwoD) {			var easeIn0 = new KeyframeEase(easeInArray[0][i][0], easeInArray[1][i][0]);			var easeOut0 = new KeyframeEase(easeOutArray[0][i][0], easeOutArray[1][i][0]);			var easeIn1 = new KeyframeEase(easeInArray[0][i][1], easeInArray[1][i][1]);			var easeOut1 = new KeyframeEase(easeOutArray[0][i][1], easeOutArray[1][i][1]);			property.setTemporalEaseAtKey(i+1, [easeIn0, easeIn1], [easeOut0, easeOut1]);		} else if (property.propertyValueType === PropertyValueType.ThreeD) {			var easeIn0 = new KeyframeEase(easeInArray[0][i][0], easeInArray[1][i][0]);			var easeOut0 = new KeyframeEase(easeOutArray[0][i][0], easeOutArray[1][i][0]);			var easeIn1 = new KeyframeEase(easeInArray[0][i][1], easeInArray[1][i][1]);			var easeOut1 = new KeyframeEase(easeOutArray[0][i][1], easeOutArray[1][i][1]);			var easeIn2 = new KeyframeEase(easeInArray[0][i][2], easeInArray[1][i][2]);			var easeOut2 = new KeyframeEase(easeOutArray[0][i][2], easeOutArray[1][i][2]);			property.setTemporalEaseAtKey(i+1, [easeIn0, easeIn1, easeIn2], [easeOut0, easeOut1, easeOut2]);		} else {			var easeIn = new KeyframeEase(easeInArray[0][i], easeInArray[1][i]);			var easeOut = new KeyframeEase(easeOutArray[0][i], easeOutArray[1][i]);			if (keyInterpolationArray[1][i] !== KeyframeInterpolationType.HOLD) {				property.setTemporalEaseAtKey(i+1, [easeIn], [easeOut]);			} else {				property.setTemporalEaseAtKey(i+1, [easeIn]);			}		}		property.setInterpolationTypeAtKey(i+1, keyInterpolationArray[0][i], keyInterpolationArray[1][i]);	}}function applySpatialTangents(property, keyTimesArray, inSpatialTangentsArray, outSpatialTangentsArray) {	for (var sp = 0; sp < keyTimesArray.length; sp ++) {		property.setSpatialTangentsAtKey(sp+1, inSpatialTangentsArray[sp], outSpatialTangentsArray[sp]);	}}}